// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace EamaShop.Identity.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class UserRegisterDTO
    {
        /// <summary>
        /// Initializes a new instance of the UserRegisterDTO class.
        /// </summary>
        public UserRegisterDTO() { }

        /// <summary>
        /// Initializes a new instance of the UserRegisterDTO class.
        /// </summary>
        public UserRegisterDTO(string accountName, string password, string headImageUri, string nickName)
        {
            AccountName = accountName;
            Password = password;
            HeadImageUri = headImageUri;
            NickName = nickName;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccountName")]
        public string AccountName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Password")]
        public string Password { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HeadImageUri")]
        public string HeadImageUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NickName")]
        public string NickName { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (AccountName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccountName");
            }
            if (Password == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Password");
            }
            if (HeadImageUri == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "HeadImageUri");
            }
            if (NickName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "NickName");
            }
            if (this.AccountName != null)
            {
                if (this.AccountName.Length > 18)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "AccountName", 18);
                }
                if (this.AccountName.Length < 8)
                {
                    throw new ValidationException(ValidationRules.MinLength, "AccountName", 8);
                }
            }
            if (this.Password != null)
            {
                if (this.Password.Length > 18)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Password", 18);
                }
                if (this.Password.Length < 6)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Password", 6);
                }
            }
        }
    }
}
