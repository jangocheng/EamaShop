// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace EamaShop.Identity.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class UserGetDTO
    {
        /// <summary>
        /// Initializes a new instance of the UserGetDTO class.
        /// </summary>
        public UserGetDTO() { }

        /// <summary>
        /// Initializes a new instance of the UserGetDTO class.
        /// </summary>
        public UserGetDTO(long? userId = default(long?), string accountName = default(string), string phone = default(string), string email = default(string), string nickName = default(string), string headImageUri = default(string), int? sexy = default(int?), DateTime? lastLoginTime = default(DateTime?), int? role = default(int?), string country = default(string), string city = default(string), string province = default(string))
        {
            UserId = userId;
            AccountName = accountName;
            Phone = phone;
            Email = email;
            NickName = nickName;
            HeadImageUri = headImageUri;
            Sexy = sexy;
            LastLoginTime = lastLoginTime;
            Role = role;
            Country = country;
            City = city;
            Province = province;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserId")]
        public long? UserId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccountName")]
        public string AccountName { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Phone")]
        public string Phone { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Email")]
        public string Email { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NickName")]
        public string NickName { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HeadImageUri")]
        public string HeadImageUri { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Sexy")]
        public int? Sexy { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastLoginTime")]
        public DateTime? LastLoginTime { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Role")]
        public int? Role { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Country")]
        public string Country { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "City")]
        public string City { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Province")]
        public string Province { get; private set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (this.AccountName != null)
            {
                if (this.AccountName.Length > 20)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "AccountName", 20);
                }
                if (this.AccountName.Length < 8)
                {
                    throw new ValidationException(ValidationRules.MinLength, "AccountName", 8);
                }
            }
        }
    }
}
